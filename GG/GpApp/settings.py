"""
Django settings for GpApp project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
# -*- coding: utf-8 -*
import os
import django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "GpApp.settings")

default_encoding = 'utf-8'
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4lwcj*7#y5%cpctqk1cd8q$77n+k!5#_k6$gsmv8qhn+xcn^)8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'z_user',
    'ContentApp',
    'show',
    'topic',
]

# -----------------------------Begin-------------------------------------
# LOGGING = {
#  'version': 1,
#  'disable_existing_loggers': True,
#  'formatters': {
#   'standard': {
#    'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}
#  },
#  'filters': {
#   'require_debug_false': {
#    '()': 'django.utils.log.RequireDebugFalse',
#   }
#  },
#  'handlers': {
#
#   'null': {
#    'level': 'DEBUG',
#    'class': 'logging.NullHandler',
#  },
#   'mail_admins': {
#    'level': 'ERROR',
#    'class': 'django.utils.log.AdminEmailHandler',
#    'filters': ['require_debug_false'],
#    'include_html': True,
#  },
#   'debug': {
#    'level': 'DEBUG',
#    'class': 'logging.handlers.RotatingFileHandler',
#    'filename': os.path.join(BASE_DIR, "log", 'debug.log'),
#    'maxBytes': 1024*1024*5,
#    'backupCount': 5,
#    'formatter': 'standard',
#  },
#   'console': {
#    'level': 'DEBUG',
#    'class': 'logging.StreamHandler',
#    'formatter': 'standard',
#  },
#  },
#  'loggers': {
#   'django': {
#    'handlers': ['console'],
#    'level': 'DEBUG',
#    'propagate': False
#  },
#   'django.request': {
#    'handlers': ['debug', 'mail_admins'],
#    'level': 'ERROR',
#    'propagate': True,
#  },
#
#   'django.security.DisallowedHost': {
#    'handlers': ['null'],
#    'propagate': False,
#  },
#  }
# }
#  -----------------------------End-------------------------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'GpApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GpApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': 'localhost',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': 'zlj941020',
        'NAME': 'bysj',
    }
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'ContentApp.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}


# 设置每页显示的数目，默认为20，可以自己修改
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 8

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
MEDIA_ROOT =os.path.join(BASE_DIR, 'static')
# MEDIA_ROOT =os.path.join(BASE_DIR,'var/www/app/static')


CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

CELERY_IMPORTS = ('ContentApp.my_celery.tasks', )

 
BROKER_URL = 'django://localhost:8000//'


HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'